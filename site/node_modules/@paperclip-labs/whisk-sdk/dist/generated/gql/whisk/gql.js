/* eslint-disable */
import * as types from './graphql';
const documents = {
    "\n  query Avatar_IdentityQuery($address: String!, $resolverOrder: [IdentityResolverInput!]) {\n    identity(address: $address, resolverOrder: $resolverOrder) {\n      aggregate {\n        avatar\n      }\n    }\n  }\n": types.Avatar_IdentityQueryDocument,
    "\n  query Name_IdentityQuery($address: String!, $resolverOrder: [IdentityResolverInput!]) {\n    identity(address: $address, resolverOrder: $resolverOrder) {\n      aggregate {\n        name\n      }\n    }\n  }\n": types.Name_IdentityQueryDocument,
    "\n  fragment Profile_IdentityFragment on Identity {\n    aggregate {\n      name\n      avatar\n      bio\n      website\n      x\n      github\n      discord\n      telegram\n    }\n    ens {\n      name\n    }\n    farcaster {\n      name\n    }\n    nns {\n      name\n    }\n    base {\n      name\n    }\n    uni {\n      name\n    }\n    lens {\n      name\n    }\n    world {\n      name\n    }\n  }\n": types.Profile_IdentityFragmentFragmentDoc,
    "\n  query Profile_IdentityQuery($address: String!, $resolverOrder: [IdentityResolverInput!]) {\n    identity(address: $address, resolverOrder: $resolverOrder) {\n      ...Profile_IdentityFragment\n    }\n  }\n": types.Profile_IdentityQueryDocument,
};
export function graphql(source) {
    return documents[source] ?? {};
}
