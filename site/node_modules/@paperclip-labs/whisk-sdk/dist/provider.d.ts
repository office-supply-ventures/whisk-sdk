import { ReactNode } from "react";
import { Address } from "viem";
import { IdentityResolverInput } from "./generated/gql/whisk/graphql";
import { createWhiskClient } from "./utils/graphql";
export interface IdentityKitConfig {
    resolverOrder?: IdentityResolverInput[];
    overrides?: Record<Address, {
        name: string;
        avatar: string;
    } | undefined>;
}
export interface WhiskSdkConfig {
    identity?: IdentityKitConfig;
}
export interface WhiskSdkContextType {
    whiskClient?: ReturnType<typeof createWhiskClient>;
    config: WhiskSdkConfig;
}
export interface WhiskSdkProviderParams {
    apiKey: string;
    config: WhiskSdkConfig;
    children: ReactNode;
}
export declare function WhiskSdkProvider({ apiKey, config, children }: WhiskSdkProviderParams): import("react/jsx-runtime").JSX.Element;
export declare function useWhiskSdkContext(): WhiskSdkContextType;
