"use strict";
// "use client";
// import { formatAddress } from "../../format";
// import { FragmentType, graphql, useFragment } from "../../generated/gql/whisk";
// import { cn } from "../../ui";
// import { motion, AnimatePresence } from "motion/react";
// import { HTMLAttributes } from "react";
// import { Address } from "viem";
// export const Profile_IdentityResolverOutputFragment = graphql(/* GraphQL */ `
//   fragment Name_IdentityResolverOutputFragment on IdentityResolverOutput {
//     name
//   }
// `);
// interface NameUiProps extends HTMLAttributes<HTMLDivElement> {
//   address: Address;
//   fragment: FragmentType<typeof Name_IdentityResolverOutputFragment> | undefined;
// }
// export function NameUi({ address, fragment, className, ...props }: NameUiProps) {
//   const data = useFragment(Name_IdentityResolverOutputFragment, fragment);
//   const name = data?.name;
//   return (
//     <div className={cn("relative", className)} {...props}>
//       <AnimatePresence mode="popLayout" initial={false}>
//         <motion.div
//           key={name ? "loaded" : "loading"}
//           initial={{ opacity: 0 }}
//           animate={{ opacity: 1 }}
//           exit={{ opacity: 0 }}
//           transition={{ type: "spring", duration: 0.3, bounce: 0 }}
//           className={cn("dk-text-ellipsis dk-overflow-hidden dk-whitespace-nowrap")}
//         >
//           {name ?? formatAddress({ address })}
//         </motion.div>
//       </AnimatePresence>
//     </div>
//   );
// }
