"use client";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { cn } from "../../ui";
import clsx from "clsx";
import { useEffect, useState } from "react";
function getLinearGradientForAddress(address) {
    const addr = address.slice(2, 10);
    const seed = parseInt(addr, 16);
    const number = Math.ceil(seed % 0xffffff);
    return `linear-gradient(45deg, #${number.toString(16).padStart(6, "0")}, #FFFFFF)`;
}
export function AvatarUi({ address, size, avatar, className, ...props }) {
    const [isLoaded, setIsLoaded] = useState(false);
    // Reset if address or avatar changes
    useEffect(() => {
        setIsLoaded(false);
    }, [address, avatar]);
    return (_jsxs("div", { className: cn("relative rounded-full overflow-hidden border border-black/10 flex-shrink-0", className), style: {
            width: size,
            height: size,
        }, ...props, children: [_jsx("div", { className: "w-full h-full absolute inset-0", style: { background: getLinearGradientForAddress(address) } }), avatar && (_jsx("img", { src: avatar, alt: "", width: size, height: size, className: clsx("absolute left-0 top-0 transition-opacity duration-300 w-full h-full", isLoaded ? "opacity-100" : "opacity-0"), onLoad: () => setIsLoaded(true), onError: ({ currentTarget }) => currentTarget.remove() }))] }));
}
