import { jsxs, jsx } from "react/jsx-runtime";
import { useState, useMemo } from "react";
import { LoaderCircle, CircleX, CircleCheck } from "lucide-react";
import clsx from "clsx";
function GenerateKey() {
  const [state, setState] = useState("idle");
  async function handleSubmit(e) {
    e.preventDefault();
    const form = e.target;
    const formData = new FormData(form);
    const email = formData.get("email");
    if (email) {
      setState("loading");
      try {
        const resp = await fetch(`https://api.whisk.so/generate-key`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({ email })
        });
        if (resp.ok) {
          const data = await resp.json();
          console.log(`Generated key:`, data);
          setState("success");
        } else {
          console.error(`Failed to generate key:`, resp.statusText, await resp.text());
          setState("error");
        }
      } catch (err) {
        console.error(`Fetch error GenerateKey:`, err);
        setState("error");
      }
    }
  }
  const inner = useMemo(() => {
    switch (state) {
      case "success":
        return /* @__PURE__ */ jsxs("div", { className: "flex flex-col gap-4 items-center justify-center text-center", children: [
          /* @__PURE__ */ jsx(CircleCheck, { size: 80, className: "stroke-green-400" }),
          /* @__PURE__ */ jsx("span", { className: "text-[24px] text-green-400", children: "Success" }),
          /* @__PURE__ */ jsx("span", { className: "text-[#A7A7A8]", children: "Check your email for your API key!" }),
          /* @__PURE__ */ jsx("button", { onClick: () => setState("idle"), children: "Go back" })
        ] });
      case "error":
        return /* @__PURE__ */ jsxs("div", { className: "flex flex-col gap-4 items-center justify-center text-center", children: [
          /* @__PURE__ */ jsx(CircleX, { size: 80, className: "stroke-red-400" }),
          /* @__PURE__ */ jsx("span", { className: "text-[24px] text-red-400", children: "OOPS" }),
          /* @__PURE__ */ jsx("span", { className: "text-[#A7A7A8]", children: "Something went wrong and we are looking into it. Try again later" }),
          /* @__PURE__ */ jsx("button", { onClick: () => setState("idle"), children: "Go back" })
        ] });
      default:
        return /* @__PURE__ */ jsxs("form", { onSubmit: handleSubmit, className: "flex flex-col gap-4", children: [
          /* @__PURE__ */ jsx(
            "input",
            {
              id: "email",
              name: "email",
              type: "email",
              required: true,
              placeholder: "Enter your email",
              className: "p-3 rounded-[4px]"
            }
          ),
          /* @__PURE__ */ jsx(
            "button",
            {
              type: "submit",
              className: clsx(
                "bg-[#5b5bd6] rounded-[4px] p-2 border  text-white disabled:bg-white/10 items-center justify-center flex h-[42px]",
                state == "loading" ? "border-transparent" : "border-[#6e6ade]"
              ),
              disabled: state != "idle",
              children: state == "loading" ? /* @__PURE__ */ jsx(LoaderCircle, { size: 20, className: "animate-spin" }) : "Create API Key"
            }
          ),
          /* @__PURE__ */ jsx("div", { className: "text-xs text-center text-[#A7A7A8]", children: "By submitting this form, you agree to our terms and privacy policy as well as give consent to reach you for marketing purposes." })
        ] });
    }
  }, [state]);
  return /* @__PURE__ */ jsx("div", { className: "bg-[#323035] p-5 max-w-[400px] rounded-[4px] border border-[#3c393f]", children: inner });
}
export {
  GenerateKey as G
};
